}
shinyApp(ui = ui, server = server)
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10, ),plotOutput(outputId = "plot1", height = 250)
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output, session) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot1 <- reactivePlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
c_data <- read.csv("C:\\Users\\Robbin Berger\\Dropbox\\Hogeschool Rotterdam\\Minor Data Science\\Kwartaal 13\\DataViz\\Individuele opdracht\\AC1908.csv")
head(ac_data)
nrow(ac_data)
ncol(ac_data)
str(ac_data)
sum(is.na(ac_data$Operator))
sum(is.na(ac_data$Type))
opers <- levels(ac_data$Operator) #2477 operators
types <- levels(ac_data$Type)  #2447 types of flying objects..
head(sort(table(ac_data$Operator), decreasing = T), n = 10)
tail(sort(table(ac_data$Operator), decreasing = T), n = 10)
head(sort(table(ac_data$Type),decreasing = T), n = 10)
tail(sort(table(ac_data$Type), decreasing = T), n = 10)
#wat wil de beste man nou?  operators per type aircraft of beide los?
# help("aggregate")
# agr_data <- (aggregate(ac_data$Type ~ ac_data$Operator , data = ac_data, FUN = length))
# head(sort(agr_data$`ac_data$Type`, decreasing = T))
#schiet niks op. bovenstaande is zelfde als de eerder uitgevoerde head
#verkennen van plot mogelijkheden
barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
par(mar=c(10,4,1,1))
barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 2,
main = "Aantal crashes per type vliegtuig", ylab = "aantal crashes", xlab = "type vliegtuig")
help(par)
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10, ),plotOutput(outputId = "plot1", height = 250)
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot1 <- reactivePlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10, ),plotOutput(outputId = "plot1", height = 250)
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot1 <- renderPlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
hist(rnorm(1000), main = "hello world")
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10 ),plotOutput(outputId = "plot1")
),
fluidRow(
box(plotOutput("plot2"))
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot2 <- renderPlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10 ),plotOutput(outputId = "plot1")
),
fluidRow(
box(plotOutput("plot2"))
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot2 <- renderPlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10 ),plotOutput(outputId = "plot1")
)),
fluidRow(
box(plotOutput("plot2"), title = "plot 2", solidHeader = T)
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot2 <- renderPlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
#install.packages("shiny")
i#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10 ),plotOutput(outputId = "plot1")
)),
fluidRow(
box(plotOutput("plot2"), title = "plot 2", solidHeader = T)
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot2 <- renderPlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
#install.packages("shiny")
#nstall.packages("shinydashboard")
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course"),
messageItem(from = "Auteur", message = "created by Robbin Berger, 0817915")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")
),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 6)
)),
tabItem(tabName = "dashboard",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
),
fluidRow(
box(title = "Plot 1", solidHeader = T, status = "success", sliderInput(inputId = "slider1",
label = "kies het aantal operators", min = 0, max = 100, value = 10 ),plotOutput(outputId = "plot1")
)),
fluidRow(
box(plotOutput("plot2"), title = "plot 2", solidHeader = T)
)
)
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
output$plot1 <- renderPlot({
#barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2 )
hist(rnorm(1000), main = "hello world")
})
}
shinyApp(ui = ui, server = server)
