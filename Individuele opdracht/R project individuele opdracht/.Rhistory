sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"))
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashoard", h2("dashoard shows here"))
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"))
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashoard")
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
),
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"))
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashoard")
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"))
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard", h2("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"))
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard", h3("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"))
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard"
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard"
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard", h2("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
)
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "lekker oefenen")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard", h2("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
)
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier")
),
tabItem(tabName = "dashboard", h2("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
)
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page", h2("informatie en uitleg hier"),
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla")
)),
tabItem(tabName = "dashboard", h2("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
)
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
)),
tabItem(tabName = "dashboard", h2("hello")
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
)
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
header <- dashboardHeader(title = "my test dashboard", dropdownMenu(type =  "messages",
messageItem(from = "Sales", message = "Final Case study of Data visualisation course")
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Welcome page", tabName = "welcome page",icon = icon("comment")),
menuItem("Dashoard", tabName = "dashboard", icon = icon("dashboard"), badgeLabel = "new", badgeColor = "green")
)
),
body <- dashboardBody(
tabItems(
tabItem(tabName = "welcome page",
fluidRow(
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12)
)),
tabItem(tabName = "dashboard",
box(title = "Welcome", solidHeader = T, status = "info", "blablablabla", br(), "blablabla", width = 12))
)
# fluidRow(
#  box(plotOutput(outputId = "bpOperators")),
#  box(Output(outputId = "bpTypes"))
# )
),
dashboardPage(header, sidebar, body)
)
server <- function(input, output) {
# output$bpOperators <- renderPlot({
#  par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Operator), decreasing = T), n = 10), ylim = c(0,200), col = "gray", las =2, main =
#           "Top 10 crashed operators", xlab = "operators", ylab = "number of crashes", sub = "source: airplane crashes since 1908")
#     })
#
# output$bpTypes <-renderPlot({
#   par(mar=c(10,4,1,1))
#   barplot(head(sort(table(ac_data$Type),decreasing = T), n = 10), ylim = c(0,350), col = "lightgray", las = 3, main =
#             "top 10 crashed types of airplanes")
# })
}
shinyApp(ui = ui, server = server)
